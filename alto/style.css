body, html {
	background: black;
	color: white;
	display: flex;
	justify-content: center;
	align-items: center;
	align-content: center;
	justify-items: center;
	flex-direction: column;
	min-height: 100%;
	margin: 0;
	flex-grow: 1;
	--accent-primary: #F10DA2;
	--accent-secondary: #FE5000;
	overflow-x: hidden;
}

section {
	scroll-snap-align: center;
}

:root {
	--scroll: 0px;
	--ratio: 1;
	font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Inter', sans-serif;
}

@supports (font-variation-settings: normal) {
	:root {
		font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Inter var', sans-serif;
	}
}

* {
	animation-fill-mode: both;
}

h1, h2, h3 {
	display: flex;
	width: auto;
	margin: 0rem auto;
}

.background-container {
	position: fixed;
	z-index: -1;
	inset: 0;
	width: 100vw;
	height: 100vh;
	pointer-events: none;
}

/* Minimum aspect ratio */
@media (min-aspect-ratio: 1/1) {
	@keyframes background-anim {
		from {
			background-size: 100vmax;
		}
	
		to {
			background-size: 80vmax;
		}
	}
}

/* Maximum aspect ratio */
@media (max-aspect-ratio: 1/1) {
	@keyframes background-anim {
		from {
			background-size: auto 100vmax;
		}
	
		to {
			background-size: auto 80vmax;
		}
	}
}

/* Exact aspect ratio, put it at the bottom to avoid override*/
@media (aspect-ratio: 1/1) {
	@keyframes background-anim {
		from {
			background-size: 100%;
		}
	
		to {
			background-size: 80%;
		}
	}
}

@keyframes fade-out {
	from {}
	
	to {
		opacity: 0;
	}
}

.background {
	width: 100%;
	height: 100%;
	position: fixed;
	display: flex;
	background-position: center;
	background-repeat: no-repeat;
	background-color: transparent;
	justify-content: center;
	align-content: center;
	justify-items: center;
	align-items: center;
}

:root {
	--quickplay-pan-scale: 2.5;
	--screen-transition-zoom-scale: 4;
	--image-ratio: calc(3680 / 2382);
}

body {
	--quickplay-pan-scale: calc(var(--ratio) * 1.2);
}

@media (max-width: 1280px) {
	:root {
		--image-ratio: calc(2560 / 1584);
		--screen-transition-zoom-scale: 4;
	}

	body {
		--quickplay-pan-scale: calc(var(--ratio) * 1.5);
	}
}

@media (min-aspect-ratio: 18 / 9) {
	:root {
		--quickplay-initial-scale: calc(var(--ratio) - var(--image-ratio) + 1);
	}
}

@media (max-aspect-ratio: 18 / 9) {
	:root {
		--quickplay-initial-scale: 1.4;
	}
}

@media (max-aspect-ratio: 4 / 3) {
	:root {
		--quickplay-initial-scale: 2;
	}
}

@media (max-aspect-ratio: 7 / 8) {
	:root {
		--quickplay-initial-scale: 2.2;
	}
}

@keyframes quickplay-anim {
	from {
		transform: scale(var(--quickplay-initial-scale));
		transform-origin: 50% 20%;
	}

	to {
		transform: scale(1);
		transform-origin: 50% 20%;
	}
}

@keyframes screen-transition-anim {
	from {
		scale: 1;
		transform-origin: 90% 0%;
	}

	to {
		scale: var(--quickplay-pan-scale);
		transform-origin: 90% 0%;
	}
}

@keyframes screen-pan-anim {
	from {
		scale: var(--quickplay-pan-scale);
		transform-origin: 90% 0%;
	}

	to {
		scale: var(--quickplay-pan-scale);
		transform-origin: top left;
	}
}

@keyframes quickplay-screen-transition-prepare {
	from {
		scale: var(--quickplay-pan-scale);
	}

	to {
		scale: var(--screen-transition-zoom-scale);
	}
}

.background.quickplay img {
	animation:
		quickplay-anim 1s ease-in-out 1 both,
		screen-transition-anim 1s ease-in-out 1 forwards,
		screen-pan-anim 1s linear 1 forwards,
		fade-out 1s ease-in-out 1 forwards;
	animation-play-state:
		paused,
		paused,
		paused;
	animation-delay:
		calc(var(--scroll) * -1s),
		calc(calc(var(--scroll) - 1) * -1s),
		calc(calc(var(--scroll) - 2) * -1s),
		calc(calc(var(--scroll) - 3) * -1s);
}

@keyframes collection-artists-anim {
	0% {
		opacity: 0;
	}

	30% {
		opacity: 0;
	}

	70% {
		opacity: 1;
	}

	100% {
		opacity: 1;
	}
}

@keyframes collection-screen-transition-in {
	from {
		scale: var(--quickplay-pan-scale);
	}

	to {
		scale: 1;
	}
}

.background.collection.artists img {
	animation:
		collection-artists-anim 1s ease-in-out 1 both,
		collection-screen-transition-in 1s ease-in-out 1 both;
	animation-play-state:
		paused,
		paused;
	animation-delay:
		calc(calc(var(--scroll) - var(--position)) * -1s),
		calc(calc(var(--scroll) - 4) * -1s);
	transform-origin: top left;
}

.background.collection.albums img {
	animation:
		collection-artists-anim 1s ease-in-out 1 both,
		collection-screen-transition-in 1s ease-in-out 1 both;
	animation-play-state:
		paused,
		paused;
	animation-delay: 
		calc(calc(var(--scroll) - var(--position)) * -1s),
		calc(calc(var(--scroll) - 4) * -1s);
	transform-origin: top left;
}

.background.collection.genres img {
	animation:
		collection-artists-anim 1s ease-in-out 1 both,
		collection-screen-transition-in 1s ease-in-out 1 both;
	animation-play-state:
		paused,
		paused;
	animation-delay:
		calc(calc(var(--scroll) - var(--position)) * -1s),
		calc(calc(var(--scroll) - 4) * -1s);
	transform-origin: top left;
}

.background.collection.songs img {
	animation: collection-artists-anim 1s ease-in-out 1 both;
	animation-play-state: paused;
	animation-delay: calc(calc(var(--scroll) - var(--position)) * -1s);
}

.background.collection.playlists img {
	animation: collection-artists-anim 1s ease-in-out 1 both;
	animation-play-state: paused;
	animation-delay: calc(calc(var(--scroll) - var(--position)) * -1s);
}

.background.now-playing img {
	animation:
		collection-artists-anim 1s ease-in-out 1 both,
		quickplay-anim 0.5s ease-in-out 1 both reverse;
	animation-play-state:
		paused,
		paused;
	animation-delay:
		calc(calc(var(--scroll) - var(--position)) * -1s),
		calc(calc(var(--scroll) - calc(var(--position) + 1)) * -1s);
}

@keyframes blur {
	from {
		backdrop-filter: blur(20px) saturate(160%);
		-webkit-backdrop-filter: blur(20px) saturate(160%);
	}
	
	to {
		backdrop-filter: blur(0px) saturate(100%);
		-webkit-backdrop-filter: blur(0px) saturate(100%);
	}
}

.blur {
	width: 120vw;
	height: 120vh;
	position: fixed;
	inset: -10vh -10vw;
}

#landing-blur {
	animation: blur 1s ease-in-out 1 both;
	animation-play-state: paused;
	animation-delay: calc(var(--scroll) * -1s);
}

.background img {
	width: auto;
	height: auto;
	max-width: 100vmax;
	max-height: 100vh;
	object-fit: contain;
	justify-self: center;
	align-self: center;
	display: flex;
	margin: auto;
}

.main-section, .screenshot {
	width: 100vw;
	max-width: 100vw;
	min-height: 100vh;
	box-sizing: border-box;
	flex-direction: column;
	padding: 2rem;
	display: flex;
	z-index: 3;
}

.main-section {
	justify-content: center;
}

.main-section.help {
	align-content: center;
	align-items: center;
}

.main-section.half {
	min-height: 50vh;
	max-height: 50vh;
}

.main-section p {
	max-width: 600px;
}

.screenshot {
	justify-content: flex-end;
	justify-items: flex-end;
	align-items: flex-start;
	align-content: flex-start;
}

.screenshot h1, .screenshot p {
	margin: 0rem;
	margin-inline: 3rem;
	display: none;
}

@keyframes blur-out {
	from {
		visibility: inherit;
		filter: blur(0px) opacity(1);
		-webkit-filter: blur(0px) opacity(1);
		transform: scale(1);
	}
	
	to {
		visibility: hidden;
		pointer-events: none;
		filter: blur(20px) opacity(0);
		-webkit-filter: blur(20px) opacity(0);
		transform: scale(0.8);
	}
}

@keyframes move-up {
	from {
		translate: none;
	}

	30% {
		translate: none;
	}

	to {
		translate: 0% -35vh;
	}
}

.subsection {
	display: flex;
	flex-direction: column;
	justify-content: center;
	position: fixed;
	align-self: center;
}

#subsection-app-landing {
	animation: blur-out 1s ease-in-out 1 both;
	animation-play-state: paused;
	animation-delay: calc(var(--scroll) * -1.5s);
}

#finale-cta {
	inset: 0;
	animation:
		blur-out 0.5s ease-in-out 1 both,
		move-up 0.5s linear 1 both;
	animation-direction: reverse, normal;
	animation-play-state: paused, paused;
	animation-delay:
		calc(calc(var(--scroll) - var(--position)) * -1s),
		calc(calc(var(--scroll) - var(--position) - 0.5) * -1s);
}

#finale-blur {
	animation: blur 0.5s ease-in-out 1 both;
	animation-direction: reverse;
	animation-play-state: paused;
	animation-delay: calc(calc(var(--scroll) - var(--position)) * -1s);
}

.icon-container {
	width: 20rem;
	height: 20rem;
	position: relative;
	margin: 0rem auto;
	margin-bottom: -2rem;
}

.small .icon-container {
	width: 15rem;
	height: 15rem;
	margin-bottom: -1.5rem;
}

.app-icon-halo {
	width: 20rem;
	height: 20rem;
	max-width: 100vmin;
	max-height: 100vmin;
	position: absolute;
}

.small .app-icon-halo {
	width: 15rem;
	height: 15rem;
	max-width: 75vmin;
	max-height: 75vmin;
}

.app-icon {
	width: 16rem;
	height: 16rem;
	max-width: 80vmin;
	max-height: 80vmin;
	margin: min(2rem, 10vmin);
	position: absolute;
}

.small .app-icon {
	width: 12rem;
	height: 12rem;
	max-width: 60vmin;
	max-height: 60vmin;
	margin: min(1.5rem, 7.5vmin);
}

.app-title {
	font-size: 3.75rem;
	position: relative;
	text-align: center;
}

.app-title.beta::after {
	content: "Beta";
	font-size: 1.5rem;
	position: absolute;
	left: 100%;
	bottom: 10%;
	margin-left: 0.5rem;
	opacity: 0.6;
}

.tagline {
	font-size: 2.25rem;
	text-align: center;
	margin-top: 1em;
}

.small .tagline {
	font-size: 1.75rem;
}

button {
	height: 2em;
}

a[download],
button.download {
	--background: linear-gradient(to left bottom, var(--accent-primary), var(--accent-primary) 30%, var(--accent-secondary) 70%, var(--accent-secondary));
	background: var(--background);
	background-size: 300% 300%;
	background-position: top right;
	border-radius: 0.75rem;
	font-size: 1.5rem;
	font-weight: 700;
	text-decoration: none;
	text-align: center;
	border: 0px;
	box-shadow: inset 0px 0px 0px 0.125rem rgba(255, 255, 255, 0.2);
	color: inherit;
	display: inline-block;
	min-width: 18rem;
	height: 2em;
	margin: 0rem auto;
	margin-top: 1em;
	padding: 0.5rem 2rem;
	transition-duration: 600ms;
	box-sizing: border-box;
	white-space: nowrap;
}

a[download]:hover,
a[download]:focus-visible,
button.download:hover,
button.download:focus-visible {
	background-size: 100% 100%;
	background-position: center;
	transform: translateY(-1px);
}

a[download]:active,
button.download:active {
	background-size: 300% 300%;
	background-position: center;
	transform: translateY(0px) scale(0.985);
	transition-duration: 600ms, 150ms;
	transition-property: all, transform;
}

a[download] img,
button.download img {
	width: 1em;
	height: 1em;
	position: relative;
	top: 0.5px;
	margin-right: 0.5rem;
}

a.link, button {
	appearance: none;
	background: none;
	border: none;
	color: inherit;
	font-size: 1.25rem;
	font-weight: 700;
	text-decoration: none;
	margin: 0rem auto;
	margin-top: 1em;
	transition-duration: 150ms;
}

button {
	font-size: 1rem;
	color: rgba(255, 255, 255, 0.7);
}

button:hover {
	color: inherit;
}

a.link img {
	width: 1em;
	height: 1em;
	vertical-align: text-bottom;
	transition-duration: 150ms;
	position: relative;
	top: -1px;
}

a.link:hover img,
a.link:active img {
	transform: translateX(2px);
}

a.link:active {
	transform: translateY(1px);
}

@keyframes fade-in {
	from {
		opacity: 0;
		visibility: hidden;
	}

	to {
		opacity: 1;
		visibility: visible;
	}
}

footer {
	position: fixed;
	inset: auto 0rem 0rem;
	display: flex;
	justify-content: flex-end;
	flex-direction: column;
	width: 100vw;
	height: 50vh;
	padding: 4rem;
	box-sizing: border-box;
	animation: fade-in 0.35s ease-in-out 1 both;
	animation-play-state: paused;
	animation-delay: calc(calc(var(--scroll) - var(--position)) * -1s);
	pointer-events: none;
	z-index: 100000;
}

footer h2, footer p, .help p {
	margin-block: 0.5em;
	pointer-events: initial;
}

footer p {
	text-align: center;
}

footer a, address a {
	color: lightblue;
	text-decoration-thickness: 10%;
}

footer a:visited, address a:visited {
	color: plum;
}

.help p {
	font-size: 1rem;
}

input {
	accent-color: var(--accent-primary);
}

dialog {
	background-color: black;
	border: none;
	color: inherit;
	box-shadow: inset 0px 0px 0px 1px rgba(255, 255, 255, 0.2);
	border-radius: 0.5rem;
	display: flex;
	flex-direction: column;
	padding: 2rem;
	min-width: min(80vw, 24rem);
	opacity: 0;
	pointer-events: none;
	transition-duration: 300ms;
}

dialog::backdrop {
	backdrop-filter: blur(20px) saturate(160%);
	-webkit-backdrop-filter: blur(20px) saturate(160%);
	background-color: rgba(0, 0, 0, 0.6);
}

dialog div {
	margin: 0rem auto;
	flex-direction: column;
	display: flex;
}

dialog a[download] {
	display: flex;
	width: 100%;
}

dialog[open] {
	opacity: 1;
	pointer-events: initial;
}